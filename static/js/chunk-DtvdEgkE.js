import{O as f,E as g}from"./chunk-CdV9K1BU.js";async function h(t){a.checkChromeStorage();const e=await chrome.storage.local.get(t);if(!e[t])return null;if(typeof e[t]!="string")return e[t];try{return JSON.parse(e[t])}catch{return e[t]??null}}async function u(t){return a.checkChromeStorage(),(await chrome.storage.local.get(t))[t]??null}async function l(t){a.checkChromeStorage(),await chrome.storage.local.set(t)}async function S(t){a.checkChromeStorage(),await chrome.storage.local.remove(t)}function m(t,e){a.checkChromeStorage(),chrome.storage.onChanged.addListener(s=>{e&&e.length>0?e.some(n=>Object.keys(s).includes(n))&&t(s):t(s)})}class p{async getParsedFromStorage(e){return h(e)}async getNonParsedFromStorage(e){return u(e)}async setOnStorage(e){await l(e)}async removeFromStorage(e){await S(e)}addStorageListener(e,s){m(e,s)}}class a{static checkChromeStorage(){const e=typeof chrome>"u"||typeof chrome.storage>"u";return e&&console.error("❌ Chrome storage is not available"),e===!1}static async getParsedFromStorage(e){return h(e)}static async getNonParsedFromStorage(e){return u(e)}static async setOnStorage(e){await l(e)}static async removeFromStorage(e){await S(e)}static addChromeStorageListener(e,s){m(e,s)}}async function w(t){const e=await c.checkChromeSessionStorage();if(!e)return null;const s=e[t];if(!s)return null;if(typeof s!="string")return s;try{return JSON.parse(s)}catch{return s??null}}async function y(t){const e=await c.checkChromeSessionStorage();return e?e[t]??null:null}async function v(t){const e=await c.checkChromeSessionStorage();if(e){for(const[s,n]of Object.entries(t))e[s]=n;await a.setOnStorage({"zv-session":e})}}async function C(t){c.checkChromeSessionStorage()&&await chrome.storage.local.remove(t)}class c{static async clear(){await a.removeFromStorage("zv-session")}static async checkChromeSessionStorage(){if(!a.checkChromeStorage())return null;const s=await a.getParsedFromStorage("zv-session");return(!s||Object.keys(s).length===0)&&await a.setOnStorage({"zv-session":{}}),s}static async getParsedFromStorage(e){return w(e)}static async getNonParsedFromStorage(e){return y(e)}static async setOnStorage(e){await v(e)}static async removeFromStorage(e){await C(e)}static addChromeStorageListener(e,s){m(e,s)}}class F extends p{constructor(){super(),a.checkChromeStorage()===!1&&typeof alert=="function"&&alert("⚠️ ZustandChromeStorage implemented without chrome storage")}async getParsedItem(e){return await this.getParsedFromStorage(e)}async getParsedSessionItem(e){return await c.getParsedFromStorage(e)}async getItem(e){return await this.getNonParsedFromStorage(e)}async setItem(e,s){await this.setOnStorage({[e]:s})}async setSessionItem(e,s){await c.setOnStorage({[e]:s})}async removeItem(e){await this.removeFromStorage(e)}}const I=new f(new F);async function b(t){chrome.tabs&&chrome.runtime.sendMessage({type:g["Auth:Request:FinishExternalLogin"],data:t})}const O={sendFinishExternalLoginRequest:b};async function d(t=!1){const e=await chrome.tabs.query({}),s=e.find(r=>{var o,i;return r.active&&((o=r.url)==null?void 0:o.includes("web.whatsapp.com"))&&!((i=r.favIconUrl)!=null&&i.includes("error"))})||e.find(r=>{var o;return r.active&&((o=r.url)==null?void 0:o.includes("web.whatsapp.com"))});return t?s:s||e.find(r=>{var o,i;return((o=r.url)==null?void 0:o.includes("web.whatsapp.com"))&&!((i=r.favIconUrl)!=null&&i.includes("error"))})||e.find(r=>{var o;return(o=r.url)==null?void 0:o.includes("web.whatsapp.com")})}async function P(t){if(chrome.tabs){const e=await d();e!=null&&e.id&&chrome.tabs.sendMessage(e.id,{type:g["Util:Request:RemoveRunningFlow"],data:t})}}async function R(){if(chrome.tabs){const t=await d();t!=null&&t.id&&chrome.tabs.sendMessage(t.id,{type:g["Util:Request:ToggleWhatsappSidebar"]})}}const k={sendToggleWhatsappSidebarRequest:R,sendRemoveRunningFlowRequest:P},N={auth:O,util:k},W=()=>chrome.runtime.getManifest().version;export{p as B,a as C,N as S,F as Z,d as a,c as b,I as c,W as g};
